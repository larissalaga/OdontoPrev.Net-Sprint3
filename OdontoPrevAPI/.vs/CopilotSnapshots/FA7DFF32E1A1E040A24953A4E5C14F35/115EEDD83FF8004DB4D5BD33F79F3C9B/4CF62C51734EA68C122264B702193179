using Microsoft.AspNetCore.Mvc;
using OdontoPrevAPI.Repositories.Interfaces;
using OdontoPrevAPI.Tools;
using System.Threading.Tasks;
using Swashbuckle.AspNetCore.Annotations;

namespace OdontoPrevAPI.Controllers
{
    /// <summary>
    /// Controlador para gerenciar dados de teste.
    /// </summary>
    [Route("api/[controller]")]
    [ApiController]
    public class TesteController : ControllerBase
    {
        private readonly IPacienteRepository _pacienteRepository;
        private readonly IDentistaRepository _dentistaRepository;
        private readonly IPlanoRepository _planoRepository;

        /// <summary>
        /// Inicializa uma nova instância da classe <see cref="TesteController"/>.
        /// </summary>
        /// <param name="pacienteRepository">O repositório para entidades Paciente.</param>
        /// <param name="dentistaRepository">O repositório para entidades Dentista.</param>
        /// <param name="planoRepository">O repositório para entidades Plano.</param>
        public TesteController(
            IPacienteRepository pacienteRepository,
            IDentistaRepository dentistaRepository,
            IPlanoRepository planoRepository)
        {
            _pacienteRepository = pacienteRepository;
            _dentistaRepository = dentistaRepository;
            _planoRepository = planoRepository;
        }

        /// <summary>
        /// Insere dados de teste no banco de dados.
        /// </summary>
        /// <returns>Resultado da operação de inserção de dados de teste.</returns>
        [HttpPost("populate")]
        [SwaggerOperation(Summary = "Popula o banco de dados com dados de teste", 
            Description = "Insere planos, dentistas e pacientes utilizando os dados pré-definidos em DadosDeTestes.")]
        [SwaggerResponse(200, "Dados de teste inseridos com sucesso")]
        [SwaggerResponse(500, "Erro interno")]
        public async Task<IActionResult> PopulateTestData()
        {
            try
            {
                // Contador para registrar quantas entidades foram inseridas
                int planosInseridos = 0;
                int dentistasInseridos = 0;
                int pacientesInseridos = 0;
                
                // 1. Insere todos os planos
                foreach (var plano in DadosDeTestes.ListaPlanos)
                {
                    try
                    {
                        await _planoRepository.Create(plano);
                        planosInseridos++;
                    }
                    catch (System.Exception ex)
                    {
                        // Registra, mas continua
                        System.Console.WriteLine($"Erro ao inserir plano {plano.DsCodigoPlano}: {ex.Message}");
                    }
                }

                // 2. Insere todos os dentistas
                foreach (var dentista in DadosDeTestes.ListaDentistas)
                {
                    try
                    {
                        await _dentistaRepository.Create(dentista);
                        dentistasInseridos++;
                    }
                    catch (System.Exception ex)
                    {
                        // Registra, mas continua
                        System.Console.WriteLine($"Erro ao inserir dentista {dentista.DsCro}: {ex.Message}");
                    }
                }

                // 3. Insere todos os pacientes
                foreach (var paciente in DadosDeTestes.ListaPacientes)
                {
                    try
                    {
                        await _pacienteRepository.Create(paciente);
                        pacientesInseridos++;
                    }
                    catch (System.Exception ex)
                    {
                        // Registra, mas continua
                        System.Console.WriteLine($"Erro ao inserir paciente {paciente.NrCpf}: {ex.Message}");
                    }
                }

                // Retorna um resumo das inserções
                return Ok(new
                {
                    message = "Dados de teste inseridos com sucesso",
                    details = new
                    {
                        planos = $"{planosInseridos} de {DadosDeTestes.ListaPlanos.Count} planos inseridos",
                        dentistas = $"{dentistasInseridos} de {DadosDeTestes.ListaDentistas.Count} dentistas inseridos",
                        pacientes = $"{pacientesInseridos} de {DadosDeTestes.ListaPacientes.Count} pacientes inseridos"
                    }
                });
            }
            catch (System.Exception ex)
            {
                return StatusCode(500, $"Erro ao inserir dados de teste: {ex.Message}");
            }
        }
    }
}

